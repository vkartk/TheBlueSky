// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheBlueSky.Bookings.Models;

#nullable disable

namespace TheBlueSky.Bookings.Migrations
{
    [DbContext(typeof(BookingsDbContext))]
    [Migration("20250916134902_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPassengers")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingAudit", b =>
                {
                    b.Property<int>("BookingAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingAuditId"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuditTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("NewValuesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValuesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerformedByUserId")
                        .HasColumnType("int");

                    b.HasKey("BookingAuditId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingAudits");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingCancellation", b =>
                {
                    b.Property<int>("BookingCancellationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingCancellationId"));

                    b.Property<string>("AdminNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CancelledByUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefundStatus")
                        .HasColumnType("int");

                    b.HasKey("BookingCancellationId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("BookingCancellations");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingPassenger", b =>
                {
                    b.Property<int>("BookingPassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingPassengerId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("FlightSeatStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MealPreferenceId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingPassengerId");

                    b.HasIndex("BookingId");

                    b.HasIndex("MealPreferenceId");

                    b.HasIndex("PassengerId");

                    b.ToTable("BookingPassengers");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.MealPreference", b =>
                {
                    b.Property<int>("MealPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPreferenceId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PreferenceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("MealPreferenceId");

                    b.ToTable("MealPreferences");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ManagedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("NationalityCountryId")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("RelationshipToManager")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("PassengerId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("GatewayTransactionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingAudit", b =>
                {
                    b.HasOne("TheBlueSky.Bookings.Models.Booking", "Booking")
                        .WithMany("Audits")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingCancellation", b =>
                {
                    b.HasOne("TheBlueSky.Bookings.Models.Booking", "Booking")
                        .WithOne("Cancellation")
                        .HasForeignKey("TheBlueSky.Bookings.Models.BookingCancellation", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.BookingPassenger", b =>
                {
                    b.HasOne("TheBlueSky.Bookings.Models.Booking", "Booking")
                        .WithMany("Passengers")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheBlueSky.Bookings.Models.MealPreference", "MealPreference")
                        .WithMany("BookingPassengers")
                        .HasForeignKey("MealPreferenceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TheBlueSky.Bookings.Models.Passenger", "Passenger")
                        .WithMany("Bookings")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("MealPreference");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Payment", b =>
                {
                    b.HasOne("TheBlueSky.Bookings.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("TheBlueSky.Bookings.Models.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Booking", b =>
                {
                    b.Navigation("Audits");

                    b.Navigation("Cancellation");

                    b.Navigation("Passengers");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.MealPreference", b =>
                {
                    b.Navigation("BookingPassengers");
                });

            modelBuilder.Entity("TheBlueSky.Bookings.Models.Passenger", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
